grammar Analizador;

programa: (declaracion | funcion)* ;

declaracion: 'variable' NOMBRE '=' valor ';' ;

funcion: 'function' NOMBRE '(' argumentos? ')' '{' instrucciones '}' ;

argumentos: NOMBRE (',' NOMBRE)* ;

instrucciones: (operacion_texto | impresion | retorno | concatenar)* ;

operacion_texto: NOMBRE '=' transformacion '(' cadena ')' ';' ;

transformacion: 'minusculas' | 'mayusculas' | 'longitud' | 'invertir' | 'reemplazar' ;

concatenar: NOMBRE '=' cadena '+' cadena ';' ;

impresion: 'imprimir' '(' valor ')' ';' ;

retorno: 'devolver' valor ';' ;

valor: texto | NUMERO | variable ;

cadena: texto | variable ;

texto: '"' CARACTERES '"' ;

variable: NOMBRE ;

// TOKENS
NOMBRE: [a-zA-Z] [a-zA-Z0-9_]* ;
NUMERO: [0-9]+ ;
CARACTERES: ~["\r\n]+ ;
ESPACIOS: [ \t\r\n]+ -> skip ;